#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Release notes extractor
summary: |
  Easily extract release notes for your project's changelog
description: |
  With this step you can easily extract the last entry of your project's changelog to be used as release notes!
website: https://gitlab.com/areebgroup-open-source/bitrise-release-notes-step
source_code_url: https://gitlab.com/areebgroup-open-source/bitrise-release-notes-step
support_url: https://gitlab.com/areebgroup-open-source/bitrise-release-notes-step
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: git
  - name: wget
  apt_get:
  - name: git
  - name: wget


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - changelog_file_path: "CHANGELOG.md"
    opts:
      title: "Changelog file path"
      summary: "The path of your changelog file"
      description: |
        - If it's in your project directory, just type the file's name.
        - If it's in a relative path to your project directory, type that relative file path.
      is_required: false

  - keep_markdown_output: "No"
    opts:
      title: "Keep markdown output untrimmed"
      summary: "Decides whether to keep the output release notes trimmed or not"
      description: |
        - If set to 'Yes', the output will remain exactly as in the changelog.
        - If set to 'No', the output will be trimmed of all '###' prefixes before change types.
      is_required: false
      value_options:
      - "Yes"
      - "No"

outputs:
  - RELEASE_NOTES:
    opts:
      title: "Release notes"
      summary: "The string value of the extracted release notes"
      description: |
        This output will contain the string value of the release notes keeping it's format
        as found in the Changelog just stripping the hashes before change categories.
